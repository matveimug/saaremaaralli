// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

@function makelongshadow($color, $length) {
	$val: 0px 0px $color;
	@for $i from 1 through $length {
		$val: #{$val}, #{$i}px #{$i}px #{$color};
	}
	@return $val;
}

@mixin longshadow($color, $length) {
	text-shadow: makelongshadow($color, $length);
}
@mixin longboxshadow($color, $length) {
	box-shadow: makelongshadow($color, $length);
}

@mixin fast($what) {
	transition: $what .3s ease;
}
@mixin steady($what) {
	transition: $what .5s ease;
}
@mixin flex($horizontal, $vertical) {
	display: flex;
	align-items: $horizontal;
	justify-content: $vertical;
}
.flex-center { @include flex(center, center)}

@mixin box_shadow ($level) {

	@if $level == 1 {
		box-shadow: 0 1px 3px rgba(0,0,0,0.4), 0 1px 2px rgba(0,0,0,0.12);
	} @else if $level == 2 {
		box-shadow: 0 3px 6px rgba(0,0,0,0.08), 0 3px 6px rgba(0,0,0,0.11);
	} @else if $level == 3 {
		box-shadow: 0 10px 20px rgba(0,0,0,0.09), 0 6px 6px rgba(0,0,0,0.11);
	} @else if $level == 4 {
		box-shadow: 0 14px 28px rgba(0,0,0,0.12), 0 10px 10px rgba(0,0,0,0.11);
	} @else if $level == 5 {
		box-shadow: 0 19px 38px rgba(0,0,0,0.15), 0 15px 12px rgba(0,0,0,0.11);
	}

}

@mixin btn-hover($x, $y) {
	//@include box_shadow(1);
	transform: translate($x, $y);
	//background-color: darken($color, 2%);
}

@mixin hover-border($color) {
	&::after {
		content: '';
		display: block;
		height: 2px;
		background: $color;
		width: 100%;
		transform: scaleX(0);
		@include fast(all);
	}
	&:hover::after {
		transform: scaleX(1);
	}
}
